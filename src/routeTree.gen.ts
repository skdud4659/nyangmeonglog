/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as R404RouteImport } from './routes/$404'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OnboardingIndexRouteImport } from './routes/onboarding/index'
import { Route as MainScheduleRouteImport } from './routes/main/schedule'
import { Route as MainHomeRouteImport } from './routes/main/home'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as MainWalkIndexRouteImport } from './routes/main/walk/index'
import { Route as MainMyPageIndexRouteImport } from './routes/main/myPage/index'
import { Route as MainWalkHistoryRouteImport } from './routes/main/walk/history'
import { Route as MainMyPagePetFormRouteImport } from './routes/main/myPage/petForm'
import { Route as MainMyPageModeRouteImport } from './routes/main/myPage/mode'
import { Route as MainWalkHistoryIdRouteImport } from './routes/main/walk/history_.$id'

const R404Route = R404RouteImport.update({
  id: '/$404',
  path: '/$404',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingIndexRoute = OnboardingIndexRouteImport.update({
  id: '/onboarding/',
  path: '/onboarding/',
  getParentRoute: () => rootRouteImport,
} as any)
const MainScheduleRoute = MainScheduleRouteImport.update({
  id: '/main/schedule',
  path: '/main/schedule',
  getParentRoute: () => rootRouteImport,
} as any)
const MainHomeRoute = MainHomeRouteImport.update({
  id: '/main/home',
  path: '/main/home',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const MainWalkIndexRoute = MainWalkIndexRouteImport.update({
  id: '/main/walk/',
  path: '/main/walk/',
  getParentRoute: () => rootRouteImport,
} as any)
const MainMyPageIndexRoute = MainMyPageIndexRouteImport.update({
  id: '/main/myPage/',
  path: '/main/myPage/',
  getParentRoute: () => rootRouteImport,
} as any)
const MainWalkHistoryRoute = MainWalkHistoryRouteImport.update({
  id: '/main/walk/history',
  path: '/main/walk/history',
  getParentRoute: () => rootRouteImport,
} as any)
const MainMyPagePetFormRoute = MainMyPagePetFormRouteImport.update({
  id: '/main/myPage/petForm',
  path: '/main/myPage/petForm',
  getParentRoute: () => rootRouteImport,
} as any)
const MainMyPageModeRoute = MainMyPageModeRouteImport.update({
  id: '/main/myPage/mode',
  path: '/main/myPage/mode',
  getParentRoute: () => rootRouteImport,
} as any)
const MainWalkHistoryIdRoute = MainWalkHistoryIdRouteImport.update({
  id: '/main/walk/history_/$id',
  path: '/main/walk/history/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$404': typeof R404Route
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/main/home': typeof MainHomeRoute
  '/main/schedule': typeof MainScheduleRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/main/myPage/mode': typeof MainMyPageModeRoute
  '/main/myPage/petForm': typeof MainMyPagePetFormRoute
  '/main/walk/history': typeof MainWalkHistoryRoute
  '/main/myPage': typeof MainMyPageIndexRoute
  '/main/walk': typeof MainWalkIndexRoute
  '/main/walk/history/$id': typeof MainWalkHistoryIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$404': typeof R404Route
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/main/home': typeof MainHomeRoute
  '/main/schedule': typeof MainScheduleRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/main/myPage/mode': typeof MainMyPageModeRoute
  '/main/myPage/petForm': typeof MainMyPagePetFormRoute
  '/main/walk/history': typeof MainWalkHistoryRoute
  '/main/myPage': typeof MainMyPageIndexRoute
  '/main/walk': typeof MainWalkIndexRoute
  '/main/walk/history/$id': typeof MainWalkHistoryIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$404': typeof R404Route
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/main/home': typeof MainHomeRoute
  '/main/schedule': typeof MainScheduleRoute
  '/onboarding/': typeof OnboardingIndexRoute
  '/main/myPage/mode': typeof MainMyPageModeRoute
  '/main/myPage/petForm': typeof MainMyPagePetFormRoute
  '/main/walk/history': typeof MainWalkHistoryRoute
  '/main/myPage/': typeof MainMyPageIndexRoute
  '/main/walk/': typeof MainWalkIndexRoute
  '/main/walk/history_/$id': typeof MainWalkHistoryIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$404'
    | '/auth/login'
    | '/auth/signup'
    | '/main/home'
    | '/main/schedule'
    | '/onboarding'
    | '/main/myPage/mode'
    | '/main/myPage/petForm'
    | '/main/walk/history'
    | '/main/myPage'
    | '/main/walk'
    | '/main/walk/history/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$404'
    | '/auth/login'
    | '/auth/signup'
    | '/main/home'
    | '/main/schedule'
    | '/onboarding'
    | '/main/myPage/mode'
    | '/main/myPage/petForm'
    | '/main/walk/history'
    | '/main/myPage'
    | '/main/walk'
    | '/main/walk/history/$id'
  id:
    | '__root__'
    | '/'
    | '/$404'
    | '/auth/login'
    | '/auth/signup'
    | '/main/home'
    | '/main/schedule'
    | '/onboarding/'
    | '/main/myPage/mode'
    | '/main/myPage/petForm'
    | '/main/walk/history'
    | '/main/myPage/'
    | '/main/walk/'
    | '/main/walk/history_/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R404Route: typeof R404Route
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  MainHomeRoute: typeof MainHomeRoute
  MainScheduleRoute: typeof MainScheduleRoute
  OnboardingIndexRoute: typeof OnboardingIndexRoute
  MainMyPageModeRoute: typeof MainMyPageModeRoute
  MainMyPagePetFormRoute: typeof MainMyPagePetFormRoute
  MainWalkHistoryRoute: typeof MainWalkHistoryRoute
  MainMyPageIndexRoute: typeof MainMyPageIndexRoute
  MainWalkIndexRoute: typeof MainWalkIndexRoute
  MainWalkHistoryIdRoute: typeof MainWalkHistoryIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$404': {
      id: '/$404'
      path: '/$404'
      fullPath: '/$404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/': {
      id: '/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main/schedule': {
      id: '/main/schedule'
      path: '/main/schedule'
      fullPath: '/main/schedule'
      preLoaderRoute: typeof MainScheduleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main/home': {
      id: '/main/home'
      path: '/main/home'
      fullPath: '/main/home'
      preLoaderRoute: typeof MainHomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main/walk/': {
      id: '/main/walk/'
      path: '/main/walk'
      fullPath: '/main/walk'
      preLoaderRoute: typeof MainWalkIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main/myPage/': {
      id: '/main/myPage/'
      path: '/main/myPage'
      fullPath: '/main/myPage'
      preLoaderRoute: typeof MainMyPageIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main/walk/history': {
      id: '/main/walk/history'
      path: '/main/walk/history'
      fullPath: '/main/walk/history'
      preLoaderRoute: typeof MainWalkHistoryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main/myPage/petForm': {
      id: '/main/myPage/petForm'
      path: '/main/myPage/petForm'
      fullPath: '/main/myPage/petForm'
      preLoaderRoute: typeof MainMyPagePetFormRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main/myPage/mode': {
      id: '/main/myPage/mode'
      path: '/main/myPage/mode'
      fullPath: '/main/myPage/mode'
      preLoaderRoute: typeof MainMyPageModeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main/walk/history_/$id': {
      id: '/main/walk/history_/$id'
      path: '/main/walk/history/$id'
      fullPath: '/main/walk/history/$id'
      preLoaderRoute: typeof MainWalkHistoryIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  MainHomeRoute: MainHomeRoute,
  MainScheduleRoute: MainScheduleRoute,
  OnboardingIndexRoute: OnboardingIndexRoute,
  MainMyPageModeRoute: MainMyPageModeRoute,
  MainMyPagePetFormRoute: MainMyPagePetFormRoute,
  MainWalkHistoryRoute: MainWalkHistoryRoute,
  MainMyPageIndexRoute: MainMyPageIndexRoute,
  MainWalkIndexRoute: MainWalkIndexRoute,
  MainWalkHistoryIdRoute: MainWalkHistoryIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
